@*@model signedup.Models.UserViewModel    @using (Html.BeginForm())    {        @Html.AntiForgeryToken()        <div class="form-horizontal">            <h4>UserViewModel</h4>            <hr />            @Html.ValidationSummary(true, "", new { @class = "text-danger" })            @Html.HiddenFor(model => model.Id)            <div class="form-group">                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })                <div class="col-md-10">                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })                </div>            </div>            <div class="form-group">                <div class="col-md-offset-2 col-md-10">                    <input type="submit" value="Save" class="btn btn-default" />                </div>            </div>        </div>    }    <div>        @Html.ActionLink("Back to List", "Index")    </div>*@@*@model signedup.Models.AssignTaskViewModel    <h2>Assign Task: @Model.Task.Title</h2>    @using (Html.BeginForm("AssignUserTask", "Admin", FormMethod.Post))    {        @Html.AntiForgeryToken()        @Html.HiddenFor(m => m.TaskId)        @Html.LabelFor(m => m.SelectedUserId, "Select User")        @Html.DropDownListFor(m => m.SelectedUserId, new SelectList(Model.Users, "Id", "FirstName"),            "Select a User",            new { @class = "form-control" })        <input type="submit" value="Assign Task" class="btn btn-primary" />    }*@@*@model signedup.Models.AssignTaskViewModel    <h2>Assign Task: @Model.Task.Title</h2>    @using (Html.BeginForm("AssignUserTask", "Admin", FormMethod.Post))    {        @Html.AntiForgeryToken()        @Html.Hidden("Task.TaskId", Model.Task.TaskId)        <div class="form-group">            @Html.LabelFor(m => m.Task.Description)            <p>@Model.Task.Description</p>        </div>        <div class="form-group">            @Html.LabelFor(m => m.SelectedRole, "Select Role")            @Html.DropDownListFor(m => m.SelectedRole, new SelectList(Model.Roles), "Select a role", new { @class = "form-control", @id = "roleDropdown" })        </div>        <div class="form-group">            @Html.Label("Select User")            @Html.DropDownList("SelectedUserId", Model.Users, "Select a user", new { @class = "form-control", @id = "userDropdown" })        </div>*@@*<div class="form-group">        @Html.Label("Select Designer")        @Html.DropDownList("SelectedDesignerId", Model.Designers, "Select a designer", new { @class = "form-control", @id = "designerDropdown" })    </div>*@@*<div class="form-group">        @Html.Label("Select Designer")        @Html.DropDownList("SelectedUserId", Model.Designers, "Select a user", new { @class = "form-control", @id = "userDropdown" })    </div>*@@*<div class="form-group">            @Html.LabelFor(m => m.Deadline)            @Html.TextBoxFor(m => m.Deadline, "{0:yyyy-MM-ddTHH:mm}", new { @class = "form-control", type = "datetime-local" })        </div>        <button type="submit" class="btn btn-primary">Assign Task</button>        <a href="@Url.Action("Index", "Admin")" class="btn btn-secondary">Cancel</a>    }*@@*@section scripts {        <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.6.0.min.js"></script>        <script type="text/javascript">            $(document).ready(function () {                $('#roleDropdown').change(function () {                    var selectedRole = $(this).val();                    $.getJSON('@Url.Action("GetUsers", "Admin")', { role: selectedRole }, function (data) {                        var userDropdown = $('#userDropdown');                        userDropdown.empty(); // Clear existing options                        $.each(data, function (index, user) {                            userDropdown.append($('<option></option>').val(user.Id).html(user.FirstName + ' ' + user.LastName));                        });                    });                });            });        </script>    }*@@*@section Scripts {    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>    <script type="text/javascript">        $(document).ready(function () {    $('#roleDropdown').change(function () {        var selectedRole = $(this).val();        if (selectedRole) {            $.ajax({                url: '@Url.Action("GetUsersByRole", "Admin")', // Adjust controller name as needed                type: 'GET',                data: { role: selectedRole },                success: function (data) {                    var userDropdown = $('#userDropdown');                    userDropdown.empty(); // Clear previous options                    userDropdown.append($('<option></option>').val('').html('Select a user')); // Default option                    $.each(data, function (i, user) {                        userDropdown.append($('<option></option>').val(user.Value).html(user.Text));                    });*@@*},                    error: function (xhr, status, error) {                        console.log(error); // Log error for debugging                    }                });            } else {                $('#userDropdown').empty().append($('<option></option>').val('').html('Select a user'));            }        });    });*@@*$(document).ready(function () {        $('#roleDropdown').change(function () {            var selectedRole = $(this).val();            $('#userDropdown').empty(); // Clear existing options            if (selectedRole) {                $.getJSON('@Url.Action("GetUsersByRole", "Admin")', { role: selectedRole }, function (data) {                    $('#userDropdown').append($('<option>').text('Select a user').attr('value', ''));                    $.each(data, function (i, user) {                        $('#userDropdown').append($('<option>').text(user.Username).attr('value', user.Id));                    });                });            } else {                $('#userDropdown').append($('<option>').text('Select a user').attr('value', ''));            }        });    });*@@*$(document).ready(function () {        $('#roleDropdown').change(function () {            var selectedRole = $(this).val();            $('#userDropdown').empty(); // Clear existing options            if (selectedRole) {                $.getJSON('@Url.Action("GetUsersByRole", "Admin")', { role: selectedRole }, function (data) {                    $('#userDropdown').append($('<option>').text('Select a user').attr('value', '')); // Add default option                    $.each(data, function (i, user) {                        $('#userDropdown').append($('<option>').text(user.Text).attr('value', user.Value)); // Populate user dropdown                    });                }).fail(function () {                    alert('Error retrieving users.'); // Handle error case                });            } else {                $('#userDropdown').append($('<option>').text('Select a user').attr('value', '')); // Add default option            }        });    });*@@*</script>    }*@@*@model signedup.Models.AssignTaskViewModel    @if (Model?.Task != null)    {        <h2>Assign Task: @Model.Task.Title</h2>        using (Html.BeginForm("AssignUsertask", "Admin", FormMethod.Post))        {            @Html.AntiForgeryToken()            @Html.Hidden("id", Model.Task.TaskId)            <div class="form-group">                @Html.LabelFor(m => m.Task.Description)                <p>@Model.Task.Description</p>            </div>            <div class="form-group">                @Html.LabelFor(m => m.SelectedRole, "Select Role")                @Html.DropDownListFor(m => m.SelectedRole, new SelectList(Model.Roles), "Select a role", new { @class = "form-control", @id = "roleDropdown" })            </div>            <div class="form-group">                @Html.Label("Select User")                @Html.DropDownList("SelectedUserId", new SelectList(Enumerable.Empty<SelectListItem>()), "Select a user", new { @class = "form-control", @id = "userDropdown" })            </div>            <div class="form-group">                @Html.LabelFor(m => m.Deadline)                @Html.TextBoxFor(m => m.Deadline, "{0:yyyy-MM-ddTHH:mm}", new { @class = "form-control", type = "date" })            </div>            <button type="submit" class="btn btn-primary">Assign Task</button>            <a href="@Url.Action("Index", "Admin")" class="btn btn-secondary">Cancel</a>        }        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>        <script type="text/javascript">        $(document).ready(function () {            $('#roleDropdown').change(function () {                var selectedRole = $(this).val();                if (selectedRole) {                    $.ajax({                        url: '@Url.Action("GetUsersByRole", "Admin")',                        type: 'GET',                        data: { role: selectedRole },                        success: function (data) {                            var userDropdown = $('#userDropdown');                            userDropdown.empty();                            userDropdown.append($('<option></option>').val('').html('Select a user'));                            $.each(data, function (i, user) {                                userDropdown.append($('<option></option>').val(user.Value).html(user.Text));                            });                        },                        error: function (xhr, status, error) {                            console.log(error);                        }                    });                } else {                    $('#userDropdown').empty().append($('<option></option>').val('').html('Select a user'));                }            });        });        </script>    }*@@model signedup.Models.AssignTaskViewModel@if (Model?.Task != null){    <h2>Assign Task: @Model.Task.Title</h2>    using (Html.BeginForm("AssignUserTask", "Admin", FormMethod.Post))    {        @Html.AntiForgeryToken()        @Html.Hidden("TaskId", Model.Task.TaskId)        <div class="form-group">            @Html.LabelFor(m => m.Task.Description)            <p>@Model.Task.Description</p>        </div>        <div class="form-group">            @Html.LabelFor(m => m.SelectedRole, "Select Role")            @Html.DropDownListFor(m => m.SelectedRole, new SelectList(Model.Roles), "Select a role", new { @class = "form-control", @id = "roleDropdown" })        </div>        <div class="form-group">            @Html.Label("Select User")            @Html.DropDownList("SelectedUserId", new SelectList(Enumerable.Empty<SelectListItem>()), "Select a user", new { @class = "form-control", @id = "userDropdown" })        </div>        <div class="form-group">            @Html.LabelFor(m => m.Deadline)            @Html.TextBoxFor(m => m.Deadline, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })        </div>        <button type="submit" class="btn btn-primary">Assign Task</button>        <a href="@Url.Action("Index", "Admin")" class="btn btn-secondary">Cancel</a>    }    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>    <script type="text/javascript">        $(document).ready(function () {            $('#roleDropdown').change(function () {                var selectedRole = $(this).val();                if (selectedRole) {                    $.ajax({                        url: '@Url.Action("GetUsersByRole", "Admin")',                        type: 'GET',                        data: { role: selectedRole },                        success: function (data) {                            var userDropdown = $('#userDropdown');                            userDropdown.empty();                            userDropdown.append($('<option></option>').val('').html('Select a user'));                            $.each(data, function (i, user) {                                userDropdown.append($('<option></option>').val(user.Value).html(user.Text));                            });                        },                        error: function (xhr, status, error) {                            console.log(error);                        }                    });                } else {                    $('#userDropdown').empty().append($('<option></option>').val('').html('Select a user'));                }            });        });    </script>}